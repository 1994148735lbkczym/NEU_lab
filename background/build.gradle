plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.9'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Web Starter
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	// Spring Boot Data JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	// MySQL Driver
	implementation 'mysql:mysql-connector-java:8.0.33'
	
	// H2 Database Driver (for testing)
	testImplementation 'com.h2database:h2'
	
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	// Swagger/OpenAPI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	
	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	
	// Test dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-test-autoconfigure'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	// JJWT dependencies
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Java-WebSocket for Spark AI WebSocket API
	implementation 'org.java-websocket:Java-WebSocket:1.5.4'

	// Spring Kafka
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Jacoco报告自动打开
// 移除自动打开Jacoco覆盖率报告的相关配置
// 删除 openJacocoReport 任务和 jacocoTestReport.finalizedBy openJacocoReport

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}
